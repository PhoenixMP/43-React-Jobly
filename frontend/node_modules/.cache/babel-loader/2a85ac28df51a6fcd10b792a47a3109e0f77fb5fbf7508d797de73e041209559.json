{"ast":null,"code":"var _jsxFileName = \"/home/phoenixp/springboard/unit_43/react-jobly/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport MyRoutes from './routes-nav/MyRoutes.js';\nimport Nav from './routes-nav/MyNav.js';\nimport UserContext from \"./profile/UserContext\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport JoblyApi from \"./api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [applications, setApplications] = useState(null);\n  const [token, setToken] = useLocalStorage(null);\n  const [userInfoLoaded, setUserInfoLoaded] = useState(false);\n\n  //Register new User\n  async function registerUser(data) {\n    const res = await JoblyApi.registerUser(data);\n    setToken(res);\n  }\n\n  //Login User\n  async function loginUser(data) {\n    const res = await JoblyApi.loginUser(data);\n    setToken(res);\n  }\n\n  //Update User\n  async function updateUser(data) {\n    const user = await JoblyApi.updateUser(currentUser.username, data);\n    setCurrentUser(user);\n  }\n\n  // Check for token in local storage. \n  useEffect(() => {\n    console.log(\"reloading app!\");\n    async function checkToken() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt_decode(token);\n          JoblyApi.token = token;\n          const user = await JoblyApi.getUser(username);\n          setCurrentUser(user);\n          setApplications(user.applications);\n          setUserInfoLoaded(true);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n    }\n    checkToken();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: {\n          currentUser,\n          setCurrentUser,\n          applications,\n          setApplications,\n          setToken,\n          token,\n          userInfoLoaded,\n          setUserInfoLoaded,\n          loginUser,\n          registerUser,\n          updateUser\n        },\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: /*#__PURE__*/_jsxDEV(MyRoutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mjOSkE8bgAyGJHPQ0s7UQt5p47s=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","jwt_decode","MyRoutes","Nav","UserContext","useLocalStorage","JoblyApi","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","applications","setApplications","token","setToken","userInfoLoaded","setUserInfoLoaded","registerUser","data","res","loginUser","updateUser","user","username","console","log","checkToken","getUser","err","error","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/phoenixp/springboard/unit_43/react-jobly/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\n\nimport MyRoutes from './routes-nav/MyRoutes.js'\nimport Nav from './routes-nav/MyNav.js'\nimport UserContext from \"./profile/UserContext\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport JoblyApi from \"./api/api\";\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const [applications, setApplications] = useState(null);\n\n  const [token, setToken] = useLocalStorage(null);\n\n  const [userInfoLoaded, setUserInfoLoaded] = useState(false)\n\n\n  //Register new User\n  async function registerUser(data) {\n    const res = await JoblyApi.registerUser(data);\n    setToken(res);\n  }\n\n  //Login User\n  async function loginUser(data) {\n    const res = await JoblyApi.loginUser(data);\n    setToken(res);\n  }\n\n  //Update User\n  async function updateUser(data) {\n    const user = await JoblyApi.updateUser(currentUser.username, data)\n    setCurrentUser(user)\n  }\n\n\n\n  // Check for token in local storage. \n  useEffect(() => {\n    console.log(\"reloading app!\")\n    async function checkToken() {\n      if (token) {\n        try {\n          let { username } = jwt_decode(token);\n          JoblyApi.token = token;\n          const user = await JoblyApi.getUser(username);\n          setCurrentUser(user);\n          setApplications(user.applications)\n          setUserInfoLoaded(true)\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n    }\n    checkToken();\n\n  }, [token]);\n\n\n\n  return (\n    <div>\n      <BrowserRouter>\n        <UserContext.Provider value={{ currentUser, setCurrentUser, applications, setApplications, setToken, token, userInfoLoaded, setUserInfoLoaded, loginUser, registerUser, updateUser }}>\n\n          <Nav />\n          <main>\n            <MyRoutes />\n          </main>\n        </UserContext.Provider >\n      </BrowserRouter>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}