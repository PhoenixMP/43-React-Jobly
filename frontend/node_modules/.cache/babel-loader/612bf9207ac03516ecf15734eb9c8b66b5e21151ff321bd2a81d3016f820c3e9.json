{"ast":null,"code":"var _jsxFileName = \"/home/phoenixp/springboard/unit_43/react-jobly/src/routes-nav/MyRoutes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport JoblyApi from \"../api/api\";\nimport Home from \"../home/Home.js\";\n// import CompanyDetails from \"../companies/CompanyDetails.js\";\n// import Jobs from \"../jobs/Jobs.js\";\n// import Companies from \"../companies/Companies.js\";\n// import EditUserForm from \"../profile/EditUserForm.js\";\n// import LoginForm from \"../profile/LoginForm.js\";\n// import NewUserForm from \"../profile/NewUserForm.js\";\nimport UserContext from \"../profile/UserContext\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyRoutes() {\n  _s();\n  const {\n    currentUser,\n    setCurrentUser,\n    token,\n    setToken\n  } = useContext(UserContext);\n\n  //Register new User\n  async function registerUser(data) {\n    const res = await JoblyApi.registerUser(data);\n    setToken(res);\n  }\n\n  //Login User\n  async function loginUser(data) {\n    const res = await JoblyApi.loginUser(data);\n    setToken(res);\n  }\n\n  //Update User\n  async function updateUser(data) {\n    const user = await JoblyApi.updateUser(currentUser.username, data);\n    setCurrentUser(user);\n  }\n\n  // Check for token in local storage. \n  useEffect(() => {\n    async function checkToken() {\n      if (token) {\n        let {\n          username\n        } = jwt_decode(token);\n        JoblyApi.token = token;\n        const user = await JoblyApi.getUser(username);\n        setCurrentUser(user);\n      }\n    }\n    checkToken();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(MyRoutes, \"tt8wYOhSKwGqxiG3uMCHYYriE/I=\");\n_c = MyRoutes;\nexport default MyRoutes;\nvar _c;\n$RefreshReg$(_c, \"MyRoutes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Route","Routes","Navigate","JoblyApi","Home","UserContext","jwt_decode","jsxDEV","_jsxDEV","MyRoutes","_s","currentUser","setCurrentUser","token","setToken","registerUser","data","res","loginUser","updateUser","user","username","checkToken","getUser","children","exact","path","element","fileName","_jsxFileName","lineNumber","columnNumber","replace","to","_c","$RefreshReg$"],"sources":["/home/phoenixp/springboard/unit_43/react-jobly/src/routes-nav/MyRoutes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\n\nimport JoblyApi from \"../api/api\";\n\nimport Home from \"../home/Home.js\";\n// import CompanyDetails from \"../companies/CompanyDetails.js\";\n// import Jobs from \"../jobs/Jobs.js\";\n// import Companies from \"../companies/Companies.js\";\n// import EditUserForm from \"../profile/EditUserForm.js\";\n// import LoginForm from \"../profile/LoginForm.js\";\n// import NewUserForm from \"../profile/NewUserForm.js\";\nimport UserContext from \"../profile/UserContext\";\nimport jwt_decode from \"jwt-decode\";\n\n\nfunction MyRoutes() {\n\n    const { currentUser, setCurrentUser, token, setToken } = useContext(UserContext);\n\n\n\n\n\n\n    //Register new User\n    async function registerUser(data) {\n        const res = await JoblyApi.registerUser(data);\n        setToken(res);\n    }\n\n    //Login User\n    async function loginUser(data) {\n        const res = await JoblyApi.loginUser(data);\n        setToken(res);\n    }\n\n    //Update User\n    async function updateUser(data) {\n        const user = await JoblyApi.updateUser(currentUser.username, data)\n        setCurrentUser(user)\n    }\n\n\n\n    // Check for token in local storage. \n    useEffect(() => {\n        async function checkToken() {\n            if (token) {\n                let { username } = jwt_decode(token);\n                JoblyApi.token = token;\n                const user = await JoblyApi.getUser(username);\n                setCurrentUser(user);\n\n\n            }\n        }\n        checkToken();\n    }, [token]);\n\n\n\n\n    return (\n        <div>\n            <Routes>\n                <Route exact path=\"/\" element={<Home />} />\n                {/* \n                <Route exact path=\"/companies\" element={<Companies />} />\n\n                <Route exact path=\"/companies/:handle\" element={<CompanyDetails />} />\n\n                <Route exact path=\"/jobs\" element={<Jobs />} />\n\n                <Route exact path=\"/login\" element={<LoginForm loginUser={loginUser} />} />\n\n                <Route exact path=\"/signup\" element={<NewUserForm registerUser={registerUser} />} />\n\n                <Route exact path=\"/profile\" element={<EditUserForm updateUser={updateUser} />} /> */}\n\n\n                <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n\n\n        </div>\n    );\n}\n\nexport default MyRoutes"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAE1D,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,IAAI,MAAM,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGf,UAAU,CAACM,WAAW,CAAC;;EAOhF;EACA,eAAeU,YAAYA,CAACC,IAAI,EAAE;IAC9B,MAAMC,GAAG,GAAG,MAAMd,QAAQ,CAACY,YAAY,CAACC,IAAI,CAAC;IAC7CF,QAAQ,CAACG,GAAG,CAAC;EACjB;;EAEA;EACA,eAAeC,SAASA,CAACF,IAAI,EAAE;IAC3B,MAAMC,GAAG,GAAG,MAAMd,QAAQ,CAACe,SAAS,CAACF,IAAI,CAAC;IAC1CF,QAAQ,CAACG,GAAG,CAAC;EACjB;;EAEA;EACA,eAAeE,UAAUA,CAACH,IAAI,EAAE;IAC5B,MAAMI,IAAI,GAAG,MAAMjB,QAAQ,CAACgB,UAAU,CAACR,WAAW,CAACU,QAAQ,EAAEL,IAAI,CAAC;IAClEJ,cAAc,CAACQ,IAAI,CAAC;EACxB;;EAIA;EACAtB,SAAS,CAAC,MAAM;IACZ,eAAewB,UAAUA,CAAA,EAAG;MACxB,IAAIT,KAAK,EAAE;QACP,IAAI;UAAEQ;QAAS,CAAC,GAAGf,UAAU,CAACO,KAAK,CAAC;QACpCV,QAAQ,CAACU,KAAK,GAAGA,KAAK;QACtB,MAAMO,IAAI,GAAG,MAAMjB,QAAQ,CAACoB,OAAO,CAACF,QAAQ,CAAC;QAC7CT,cAAc,CAACQ,IAAI,CAAC;MAGxB;IACJ;IACAE,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAKX,oBACIL,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACP,MAAM;MAAAuB,QAAA,gBACHhB,OAAA,CAACR,KAAK;QAACyB,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEnB,OAAA,CAACJ,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAe3CvB,OAAA,CAACR,KAAK;QAAC0B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEnB,OAAA,CAACN,QAAQ;UAAC8B,OAAO;UAACC,EAAE,EAAC;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGR,CAAC;AAEd;AAACrB,EAAA,CAvEQD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAyEjB,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}