{"ast":null,"code":"var _jsxFileName = \"/home/phoenixp/springboard/unit_43/react-jobly/src/jobs/Jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport UserContext from \"../profile/UserContext\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport JobCard from \"./JobCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n\n  //Searches for Job\n  async function searchJobs(data) {\n    let jobs = await JoblyApi.getAllJobs(data.search);\n    setJobs(jobs);\n  }\n  ;\n\n  // Set the job list. \n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getAllJobs();\n      setJobs(jobs);\n    }\n    ;\n    getJobs();\n  }, []);\n  const {\n    currentUser,\n    userInfoLoaded\n  } = useContext(UserContext);\n  if (!currentUser && userInfoLoaded) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"jobs\", /*#__PURE__*/_jsxDEV(SearchForm, {\n      searchFunction: searchJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      id: job.id,\n      title: job.title,\n      salary: job.salary,\n      equity: job.equity,\n      companyName: job.companyName\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Jobs, \"Aahhu3a/GUKnb/HVbd5XGoctEt8=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Navigate","UserContext","SearchForm","JoblyApi","JobCard","jsxDEV","_jsxDEV","Jobs","_s","jobs","setJobs","searchJobs","data","getAllJobs","search","getJobs","currentUser","userInfoLoaded","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","children","searchFunction","map","job","id","title","salary","equity","companyName","_c","$RefreshReg$"],"sources":["/home/phoenixp/springboard/unit_43/react-jobly/src/jobs/Jobs.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport UserContext from \"../profile/UserContext\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport JobCard from \"./JobCard\";\n\nconst Jobs = () => {\n\n\n    const [jobs, setJobs] = useState([]);\n\n\n\n    //Searches for Job\n    async function searchJobs(data) {\n        let jobs = await JoblyApi.getAllJobs(data.search);\n        setJobs(jobs);\n    };\n\n\n    // Set the job list. \n    useEffect(() => {\n        async function getJobs() {\n            let jobs = await JoblyApi.getAllJobs();\n            setJobs(jobs);\n        };\n\n        getJobs();\n\n    }, []);\n\n\n\n    const { currentUser, userInfoLoaded } = useContext(UserContext);\n\n\n    if (!currentUser && userInfoLoaded) {\n        return <Navigate replace to=\"/login\" />\n    }\n\n    return (\n        <div>\n            jobs\n            <SearchForm searchFunction={searchJobs} />\n            {jobs.map(job => (\n                <JobCard key={job.id} id={job.id} title={job.title} salary={job.salary} equity={job.equity} companyName={job.companyName} />\n            ))}\n        </div>\n    )\n\n\n};\nexport default Jobs;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAIpC;EACA,eAAec,UAAUA,CAACC,IAAI,EAAE;IAC5B,IAAIH,IAAI,GAAG,MAAMN,QAAQ,CAACU,UAAU,CAACD,IAAI,CAACE,MAAM,CAAC;IACjDJ,OAAO,CAACD,IAAI,CAAC;EACjB;EAAC;;EAGD;EACAV,SAAS,CAAC,MAAM;IACZ,eAAegB,OAAOA,CAAA,EAAG;MACrB,IAAIN,IAAI,GAAG,MAAMN,QAAQ,CAACU,UAAU,CAAC,CAAC;MACtCH,OAAO,CAACD,IAAI,CAAC;IACjB;IAAC;IAEDM,OAAO,CAAC,CAAC;EAEb,CAAC,EAAE,EAAE,CAAC;EAIN,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGnB,UAAU,CAACG,WAAW,CAAC;EAG/D,IAAI,CAACe,WAAW,IAAIC,cAAc,EAAE;IAChC,oBAAOX,OAAA,CAACN,QAAQ;MAACkB,OAAO;MAACC,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAEA,oBACIjB,OAAA;IAAAkB,QAAA,GAAK,MAED,eAAAlB,OAAA,CAACJ,UAAU;MAACuB,cAAc,EAAEd;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCd,IAAI,CAACiB,GAAG,CAACC,GAAG,iBACTrB,OAAA,CAACF,OAAO;MAAcwB,EAAE,EAAED,GAAG,CAACC,EAAG;MAACC,KAAK,EAAEF,GAAG,CAACE,KAAM;MAACC,MAAM,EAAEH,GAAG,CAACG,MAAO;MAACC,MAAM,EAAEJ,GAAG,CAACI,MAAO;MAACC,WAAW,EAAEL,GAAG,CAACK;IAAY,GAA3GL,GAAG,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuG,CAC9H,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAId,CAAC;AAACf,EAAA,CA7CID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}